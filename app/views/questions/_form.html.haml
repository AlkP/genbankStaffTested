// = tinymce_assets
// %label{ class: 'btn btn-info' }
//   %input{ type: 'checkbox', name: 'jopa1', autocomplete: 'off' }
//     Delete
// %label{ class: 'btn btn-info' }
//   %input{ type: 'checkbox', name: 'jopa2', autocomplete: 'off' }
//     Delete
:javascript
  tinymce.init({
    selector: 'textarea',
    height: 500,
    menubar: false,
    theme: 'modern',
    apply_source_formatting: false,
    remove_linebreaks : false,
    // font_formats: 'Arial=arial,helvetica,sans-serif;Courier New=courier new,courier,monospace;AkrutiKndPadmini=Akpdmi-n',
    fontsize_formats: '8pt 10pt 11pt 12pt 14pt 18pt 24pt 36pt',
    language: 'ru_RU',
    plugins: [
      'advlist autolink lists link image charmap print preview anchor',
      'searchreplace visualblocks code fullscreen',
      'insertdatetime media table contextmenu paste code textcolor colorpicker codesample emoticons uploadimage'
    ],
    toolbar1: 'fontselect fontsizeselect | styleselect | bold italic underline | alignleft aligncenter alignright alignjustify',
    toolbar2: 'undo redo | insert | bullist numlist outdent indent | link table image uploadimage | forecolor backcolor | codesample emoticons | visualblocks code'
  });

= form_for @question, url: url_form, html: { role: 'form' } do |f|
  %div.col-sm-6
    %div.btn-group.btn-group-lg
      = link_to t('.back'), staff_test_questions_path(@staff_test), {class: "btn btn-default button" }
      %button.btn.btn-default{ type: "submit button" }
        = t('.submit')
    %br
    %label.control-label{ for: 'description' }
      = t('.description')
    = f.text_area :description, autofocus: true, :class => "tinymce", id: "element",  :rows => 20, :cols => 140
  %div.col-sm-6
    = number_field_tag 'id', @question.id, hidden: true
    

  
:javascript
  $( document ).ready(function() {
    window.onload = function(){
    	document.getElementById("element").onkeyup = function(){
    		var getText = this.value;
    		var getRegs = getText.match(/^.*(\r\n|\n|$)/gim);
    		var setText = false;
    		for(var i = 0; i < getRegs.length; i++){
    			getText = getRegs[i].replace(/\r|\n/g, "");
    			setText += getText.length ? Math.ceil(getText.length / 50) : 1;
    		}
    		this.rows = setText;
    	};
    };
  });
  
  
  

// = tinymce :language => "ru"

